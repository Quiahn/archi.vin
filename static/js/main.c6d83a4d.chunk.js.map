{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/Auth/SignUp.js","components/AutoDismissAlert/messages.js","components/Auth/SignIn.js","components/Auth/SignOut.js","components/Auth/ChangePassword.js","components/Blob/CreateBlob.js","api/blob.js","components/Blob/OwnerBlob.js","components/Blob/IndexBlob.js","img/front.svg","components/Home/Home.js","components/Blob/ShowBlob.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","style","color","textDecoration","unauthenticatedOptions","Header","Navbar","bg","expand","Brand","margin","Toggle","aria-controls","background","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","withRouter","setMsgAlerts","history","setUser","useState","setEmail","setPassword","passwordConfirmation","setPasswordConfirmation","useEffect","Form","onSubmit","event","preventDefault","password_confirmation","then","res","prev","push","catch","error","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","e","target","Button","headers","Authorization","token","signOut","finally","oldPassword","setOldPassword","newPassword","setNewPassword","passwords","old","new","changePassword","CreateBlob","loadingUpload","setLoadingUpload","setUploads","title","artist","file","files","FormData","append","_id","createBlob","blob","document","getElementById","reset","htmlFor","accept","OwnerBlob","index","setIndex","uploads","setUpdateUploads","editOption","setEditOption","deleteOption","setDeleteOption","upload","setUpload","audioSrc","setAudioSrc","setTitle","setArtist","loadingEdit","setLoadingEdit","loadingDelete","setLoadingDelete","audioRef","useRef","source","length","current","pause","load","play","createdAt","substring","controls","preload","ref","src","href","onClick","in","editBlob","deleteBlob","IndexBlob","map","i","Home","logo","match","params","Object","keys","App","updateUploads","msgAlerts","indexBlob","blobs","prevValue","filter","msg","msgAlert","path","exact","appJsx","basename","process","ReactDOM"],"mappings":"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","file":"static/js/main.c6d83a4d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n// props will include a `user` object or empty object\r\n// props will include a `component` as `Component` or a `render`\r\n// all other props that may be passed in are `..rest`\r\nconst AuthenticatedRoute = ({\r\n    user,\r\n    component: Component,\r\n    render,\r\n    ...rest\r\n}) => {\r\n    // if props include a `user` object and a `render` then create route with `render`\r\n    if (user && render) {\r\n        return <Route {...rest} render={render} />\r\n\r\n        // if props include a `user` object but no `render` then create route with `Component`\r\n        // if props do not include a `user` object then redirect to home\r\n    } else {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) =>\r\n                    user ? <Component {...props} /> : <Redirect to='/' />\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport './AutoDismissAlert.scss'\r\n\r\nclass AutoDismissAlert extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            show: true\r\n        }\r\n        this.timeoutId = null\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.timeoutId = setTimeout(this.handleClose, 5000)\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        clearTimeout(this.timeoutId)\r\n    }\r\n\r\n    handleClose = () => this.setState({ show: false })\r\n\r\n    render () {\r\n        const { variant, heading, message, deleteAlert, id } = this.props\r\n\r\n        // Delete this alert after the fade animation time (300 ms by default)\r\n        if (!this.state.show) {\r\n            setTimeout(() => {\r\n                deleteAlert(id)\r\n            }, 300)\r\n        }\r\n\r\n        return (\r\n            <Alert\r\n                dismissible\r\n                show={this.state.show}\r\n                variant={variant}\r\n                onClose={this.handleClose}>\r\n                <div className='container'>\r\n                    <Alert.Heading>{heading}</Alert.Heading>\r\n                    <p className='alert-body'>{message}</p>\r\n                </div>\r\n            </Alert>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst authenticatedOptions = (\r\n    <Fragment>\r\n        <NavLink to='/change-password' className='nav-link' style={{ color: '#000', textDecoration: 'none' }}>Change Password</NavLink>\r\n        <NavLink to='/sign-out' className='nav-link' style={{ color: '#000', textDecoration: 'none' }}>Sign Out</NavLink>\r\n    </Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n    <Fragment>\r\n        <NavLink to='/sign-up' className='nav-link text-center' style={{ color: '#000', textDecoration: 'none' }}>Sign Up</NavLink>\r\n        <NavLink to='/sign-in' className='nav-link text-center' style={{ color: '#000', textDecoration: 'none' }}>Sign In</NavLink>\r\n    </Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n    <Navbar bg='light' variant='dark' expand='md'>\r\n        <Navbar.Brand>\r\n            <Link to='/' className='font-weight-bold' style={{ color: '#000', textDecoration: 'none', margin: '0 2rem' }}>ARCHI.VIN</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' style={{ background: '#111' }}/>\r\n        <Navbar.Collapse className=\"d-md-flex flex-row-reverse \" id='basic-navbar-nav'>\r\n            <Nav >\r\n                {user && (\r\n                    <span className='navbar-text mr-2 d-md-block d-none' style={{ color: '#000', textDecoration: 'none' }}>Welcome, {user.email}</span>\r\n                )}\r\n                {user ? authenticatedOptions : unauthenticatedOptions}\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\r\nconst apiUrls = {\r\n    production: 'https://aqueous-atoll-85096.herokuapp.com',\r\n    development: 'http://localhost:4741'\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n    apiUrl = apiUrls.development\r\n} else {\r\n    apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (credentials) => {\r\n    return axios({\r\n        method: 'POST',\r\n        url: apiUrl + '/sign-up/',\r\n        data: {\r\n            credentials: {\r\n                email: credentials.email,\r\n                password: credentials.password,\r\n                password_confirmation: credentials.passwordConfirmation\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n    return axios({\r\n        url: apiUrl + '/sign-in/',\r\n        method: 'POST',\r\n        data: {\r\n            credentials: {\r\n                email: credentials.email,\r\n                password: credentials.password\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const signOut = (user) => {\r\n    return axios({\r\n        url: apiUrl + '/sign-out/',\r\n        method: 'DELETE',\r\n        headers: {\r\n            Authorization: `Bearer ${user.token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n    return axios({\r\n        url: apiUrl + '/change-password/',\r\n        method: 'PATCH',\r\n        headers: {\r\n            Authorization: `Bearer ${user.token}`\r\n        },\r\n        data: {\r\n            passwords: {\r\n                old: passwords.oldPassword,\r\n                new: passwords.newPassword\r\n            }\r\n        }\r\n    })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction SignUp ({ setMsgAlerts, history, setUser }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState('')\r\n\r\n    useEffect(() => {\r\n        setEmail('')\r\n        setPassword('')\r\n        setPasswordConfirmation('')\r\n    }, [])\r\n\r\n    const onSignUp = (event) => {\r\n        event.preventDefault()\r\n\r\n        signUp({ email, password, passwordConfirmation })\r\n            .then(() => signIn({ email: email, password: password, passwordConfirmation: passwordConfirmation }))\r\n            .then((res) => setUser(res.data.user))\r\n            .then(() =>\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'Sign Up Success',\r\n                    message: signUpSuccess,\r\n                    variant: 'success'\r\n                }])\r\n            )\r\n            .then(() => history.push('/'))\r\n            .catch((error) => {\r\n                setEmail('')\r\n                setPassword('')\r\n                setPasswordConfirmation('')\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'Sign Up Failed with error: ' + error.message,\r\n                    message: signUpFailure,\r\n                    variant: 'danger'\r\n                }])\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n                <h3>Sign Up</h3>\r\n                <Form onSubmit={onSignUp}>\r\n                    <Form.Group controlId='email' className=\"my-4\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Enter email'\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value)\r\n                            }}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password' className=\"my-4\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='password'\r\n                            value={password}\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            onChange={(e) => { setPassword(e.target.value) }}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='passwordConfirmation' className=\"my-4\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='passwordConfirmation'\r\n                            value={passwordConfirmation}\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            onChange={(e) => { setPasswordConfirmation(e.target.value) }}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant='dark' type='submit'>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignUp)\r\n","export const signUpSuccess = 'Successfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'Welcome!'\r\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\r\nexport const uploadSuccess = 'File uploaded successfully!'\r\nexport const uploadFailure = 'Failed to upload file. Check your file size (100mb Max).'\r\nexport const editSuccess = 'File updated successfully!'\r\nexport const editFailure = 'Failed to update file.'\r\nexport const deleteSuccess = 'File deleted successfully!'\r\nexport const deleteFailure = 'File delete failed.'\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction SignIn ({ setMsgAlerts, history, setUser }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onSignIn = (e) => {\r\n        e.preventDefault()\r\n\r\n        signIn({ email, password })\r\n            .then((res) => setUser(res.data.user))\r\n            .then(() =>\r\n                setMsgAlerts((prev) => [...prev, {\r\n                    heading: 'Sign In Success',\r\n                    message: signInSuccess,\r\n                    variant: 'success'\r\n                }])\r\n            )\r\n            .then(() => history.push('/'))\r\n            .catch((error) => {\r\n                setEmail('')\r\n                setPassword('')\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'Sign In Failed with error: ' + error.message,\r\n                    message: signInFailure,\r\n                    variant: 'danger'\r\n                }])\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n                <h3>Sign In</h3>\r\n                <Form onSubmit={onSignIn}>\r\n                    <Form.Group controlId='email' className=\"my-4\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            className=\"mt-2\"\r\n                            type='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Enter email'\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password' className=\"my-4\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='password'\r\n                            value={password}\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant='dark' type='submit'>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignIn)\r\n","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signOut } from '../../api/auth'\r\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\r\n\r\nfunction SignOut ({ setUser, setMsgAlerts, history, user }) {\r\n    useEffect(() => {\r\n        signOut(user)\r\n            .finally(() =>\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'Signed Out Successfully',\r\n                    message: signOutSuccess,\r\n                    variant: 'success'\r\n                }])\r\n            )\r\n            .finally(() => setUser(null))\r\n            .finally(() => history.push('/'))\r\n    }, [])\r\n\r\n    return ('')\r\n}\r\n\r\nexport default withRouter(SignOut)\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction ChangePassword ({ setMsgAlerts, user, history }) {\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const onChangePassword = (event) => {\r\n        event.preventDefault()\r\n\r\n        changePassword({ oldPassword, newPassword }, user)\r\n            .then(() =>\r\n                setMsgAlerts((prev) => [...prev, {\r\n                    heading: 'Change Password Success',\r\n                    message: changePasswordSuccess,\r\n                    variant: 'success'\r\n                }])\r\n            )\r\n            .then(() => history.push('/'))\r\n            .catch((error) => {\r\n                setOldPassword('')\r\n                setNewPassword('')\r\n                setMsgAlerts((prev) => [...prev, {\r\n                    heading: 'Change Password Failed with error: ' + error.message,\r\n                    message: changePasswordFailure,\r\n                    variant: 'danger'\r\n                }])\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n                <h3>Change Password</h3>\r\n                <Form onSubmit={onChangePassword} className=\"my-4\">\r\n                    <Form.Group controlId='oldPassword'>\r\n                        <Form.Label>Old password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='oldPassword'\r\n                            value={oldPassword}\r\n                            type='password'\r\n                            placeholder='Old Password'\r\n                            onChange={(e) => setOldPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='newPassword' className=\"my-4\">\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            name='newPassword'\r\n                            value={newPassword}\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant='dark' type='submit'>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ChangePassword)\r\n\r\n// class ChangePassword extends Component {\r\n//     constructor (props) {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             oldPassword: '',\r\n//             newPassword: ''\r\n//         }\r\n//     }\r\n\r\n//     handleChange = (event) =>\r\n//         this.setState({\r\n//             [event.target.name]: event.target.value\r\n//         })\r\n\r\n//     onChangePassword = (event) => {\r\n//         event.preventDefault()\r\n\r\n//         const { msgAlert, history, user } = this.props\r\n\r\n//         changePassword(this.state, user)\r\n//             .then(() =>\r\n//                 msgAlert({\r\n//                     heading: 'Change Password Success',\r\n//                     message: changePasswordSuccess,\r\n//                     variant: 'success'\r\n//                 })\r\n//             )\r\n//             .then(() => history.push('/'))\r\n//             .catch((error) => {\r\n//                 this.setState({ oldPassword: '', newPassword: '' })\r\n//                 msgAlert({\r\n//                     heading: 'Change Password Failed with error: ' + error.message,\r\n//                     message: changePasswordFailure,\r\n//                     variant: 'danger'\r\n//                 })\r\n//             })\r\n//     }\r\n\r\n//     render () {\r\n//         const { oldPassword, newPassword } = this.state\r\n\r\n//         return (\r\n//             <div className='row'>\r\n//                 <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n//                     <h3>Change Password</h3>\r\n//                     <Form onSubmit={this.onChangePassword}>\r\n//                         <Form.Group controlId='oldPassword'>\r\n//                             <Form.Label>Old password</Form.Label>\r\n//                             <Form.Control\r\n//                                 required\r\n//                                 name='oldPassword'\r\n//                                 value={oldPassword}\r\n//                                 type='password'\r\n//                                 placeholder='Old Password'\r\n//                                 onChange={this.handleChange}\r\n//                             />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId='newPassword'>\r\n//                             <Form.Label>New Password</Form.Label>\r\n//                             <Form.Control\r\n//                                 required\r\n//                                 name='newPassword'\r\n//                                 value={newPassword}\r\n//                                 type='password'\r\n//                                 placeholder='New Password'\r\n//                                 onChange={this.handleChange}\r\n//                             />\r\n//                         </Form.Group>\r\n//                         <Button variant='primary' type='submit'>Submit</Button>\r\n//                     </Form>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n","import React, { useState } from 'react'\r\nimport { createBlob } from '../../api/blob'\r\nimport { uploadFailure, uploadSuccess } from '../AutoDismissAlert/messages'\r\n\r\nexport default function CreateBlob (props) {\r\n    const [loadingUpload, setLoadingUpload] = useState(false)\r\n    const { setUploads } = props\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        const title = e.target.title.value\r\n        const artist = e.target.artist.value\r\n        const file = e.target.file.files[0]\r\n\r\n        // eslint-disable-next-line no-undef\r\n        const data = new FormData()\r\n        data.append('userId', props.user._id)\r\n        data.append('title', title)\r\n        data.append('artist', artist)\r\n        data.append('file', file)\r\n        setLoadingUpload(true)\r\n        createBlob(props.user, data)\r\n            .then(res => setUploads(prev => [...prev, res.data.blob]))\r\n            .then(() => { document.getElementById('upload-form').reset() })\r\n            .then(() => setLoadingUpload(false))\r\n            .then(() =>\r\n                props.setMsgAlerts(prev => [...prev, {\r\n                    heading: 'File Uploaded Successfully',\r\n                    message: uploadSuccess,\r\n                    variant: 'success'\r\n                }])\r\n            )\r\n            .catch(() =>\r\n                props.setMsgAlerts(prev => [...prev, {\r\n                    heading: 'File Upload Failed',\r\n                    message: uploadFailure,\r\n                    variant: 'danger'\r\n                }])\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-50 mx-auto text-center\">\r\n            <h3 className='my-2'>Upload A File</h3>\r\n            <form className=\"my-3\" id='upload-form' onSubmit={submit}>\r\n                <div className=''>\r\n                    <label className='form-label' htmlFor='title'>Title:</label>\r\n                    <br/>\r\n                    <input className='form-control' id='title' type=\"text\" name=\"title\" required />\r\n                    <br/>\r\n                    <label className='form-label' htmlFor='artist'>Artist:</label>\r\n                    <br/>\r\n                    <input className='form-control mb-2' id='artist' type=\"text\" name=\"artist\" required />\r\n                </div>\r\n                <br/>\r\n                <input className='form-control' type=\"file\" name=\"file\" accept=\"audio/AAC, audio/MPEG, a /WAV, audio/FLAC, .opus\" required />\r\n                <br/>\r\n                {loadingUpload ? <div className=\"spinner-grow text-secondary\" /> : <button type=\"submit\" className='btn btn-dark'>Upload</button>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const createBlob = (user, data) => {\r\n    return axios({\r\n        method: 'POST',\r\n        url: apiUrl + '/blobs',\r\n        headers: {\r\n            Authorization: `Bearer ${user.token}`\r\n        },\r\n        data: data\r\n    })\r\n}\r\n\r\nexport const indexBlob = (user) => {\r\n    return axios({\r\n        url: apiUrl + '/list-blobs/',\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: `Bearer ${user.token}`\r\n        },\r\n        data: user\r\n    })\r\n}\r\n\r\nexport const showBlob = (id) => {\r\n    return axios({\r\n        url: apiUrl + '/blobs/' + id,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nexport const editBlob = (user, id, data) => {\r\n    return axios({\r\n        url: apiUrl + '/blobs/' + id,\r\n        method: 'PATCH',\r\n        headers: {\r\n            Authorization: `Bearer ${user.token}`\r\n        },\r\n        data: data\r\n    })\r\n}\r\n\r\nexport const deleteBlob = (user, id) => {\r\n    return axios({\r\n        url: apiUrl + '/blobs/' + id,\r\n        method: 'DELETE',\r\n        headers: {\r\n            Authorization: `Bearer ${user.token}`\r\n        }\r\n    })\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Collapse from 'react-bootstrap/esm/Collapse'\r\nimport { deleteBlob, editBlob } from '../../api/blob'\r\nimport { deleteFailure, deleteSuccess, editFailure, editSuccess } from '../AutoDismissAlert/messages'\r\n\r\nexport default function OwnerBlob ({ user, index, setIndex, uploads, setUploads, setMsgAlerts, setUpdateUploads }) {\r\n    const [editOption, setEditOption] = useState(false)\r\n    const [deleteOption, setDeleteOption] = useState(false)\r\n    const [upload, setUpload] = useState(null)\r\n    const [audioSrc, setAudioSrc] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [artist, setArtist] = useState('')\r\n    const [loadingEdit, setLoadingEdit] = useState(false)\r\n    const [loadingDelete, setLoadingDelete] = useState(false)\r\n    const audioRef = useRef(null)\r\n\r\n    const updateSong = (source) => {\r\n        setAudioSrc(source)\r\n        if (audioRef.current) {\r\n            audioRef.current.pause()\r\n            audioRef.current.load()\r\n            audioRef.current.play()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (index === null || uploads.length < 1 || !uploads[index]) return\r\n        setUpload(uploads[index])\r\n        updateSong(uploads[index].url)\r\n        setTitle(uploads[index].title)\r\n        setArtist(uploads[index].artist)\r\n    }, [index, uploads])\r\n\r\n    if (index === null || uploads.length < 1 || !uploads[index] || !upload) {\r\n        return (\r\n            <div>\r\n                <h5 className='p-3 text-center'>Select any of your uploads.</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const onDelete = (e) => {\r\n        e.preventDefault()\r\n        setLoadingDelete(true)\r\n        if (index > uploads.length - 1) {\r\n            setIndex(null)\r\n        } else {\r\n            deleteBlob(user, upload._id)\r\n                .then(() => setUpdateUploads(true))\r\n                .then(() => setLoadingDelete(false))\r\n                .then(() => setDeleteOption(false))\r\n                .then(() =>\r\n                    setMsgAlerts(prev => [...prev, {\r\n                        heading: 'File Edited Successfully',\r\n                        message: deleteSuccess,\r\n                        variant: 'success'\r\n                    }])\r\n                )\r\n                .catch(() =>\r\n                    setMsgAlerts(prev => [...prev, {\r\n                        heading: 'Edit Failed',\r\n                        message: deleteFailure,\r\n                        variant: 'danger'\r\n                    }])\r\n                )\r\n        }\r\n    }\r\n\r\n    const onEdit = (e) => {\r\n        e.preventDefault()\r\n        setLoadingEdit(true)\r\n        const data = { ...upload }\r\n        data.title = title\r\n        data.artist = artist\r\n        editBlob(user, upload._id, data)\r\n            .then(() => setUpdateUploads(true))\r\n            .then(() => setLoadingEdit(false))\r\n            .then(() =>\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'File Edited Successfully',\r\n                    message: editSuccess,\r\n                    variant: 'success'\r\n                }])\r\n            )\r\n            .then(setEditOption(false))\r\n            .catch(() =>\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'Edit Failed',\r\n                    message: editFailure,\r\n                    variant: 'danger'\r\n                }])\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            {!upload\r\n                ? null\r\n                : <div className=\"p-3 text-center\">\r\n                    <h5> {upload.title} by {upload.artist} </h5>\r\n                    <p><small >Date: {upload.createdAt.substring(0, 10)} </small> </p>\r\n                    <div className='w-100 my-4 d-flex justify-content-center align-items-center'>\r\n                        <audio controls preload=\"auto\" ref={audioRef}>\r\n                            <source src={audioSrc} />\r\n                            Your browser does not support the audio element.\r\n                        </audio>\r\n                    </div>\r\n                    <h5> Public link </h5>\r\n                    <input className=\"w-100 w-sm-50 mb-4 text-center\" value={window.location.href + 'u/' + upload._id} onChange={() => null}/>\r\n                    <div className='text-center'>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <button className=\"mx-1 btn btn-dark\" onClick={(e) => setEditOption(!editOption)}>Edit</button>\r\n                            <button className=\"mx-1 btn btn-dark\" onClick={(e) => setDeleteOption(!deleteOption)}>Delete</button>\r\n                        </div>\r\n                        <div className='pt-4'>\r\n                            <Collapse className='' in={editOption}>\r\n                                <form id=\"edit-form\" onSubmit={onEdit} >\r\n                                    <div>\r\n                                        <label htmlFor=\"title\">Title:</label> <br/>\r\n                                        <input type=\"text\" name=\"title\" onChange={(e) => setTitle(e.target.value)} value={title} required/>\r\n                                    </div>\r\n                                    <div className=\"pt-2\">\r\n                                        <label htmlFor=\"title\">Artist: </label> <br/>\r\n                                        <input type=\"text\" name=\"artist\" onChange={(e) => setArtist(e.target.value)} value={artist} required/>\r\n                                    </div>\r\n                                    { loadingEdit\r\n                                        ? <div className=\"spinner-border\"></div>\r\n                                        : <>\r\n                                            <input type=\"submit\" value=\"Submit\" className=\"mt-3 mx-1 btn btn-dark\" />\r\n                                            <input type=\"button\" onClick={(e) => setEditOption(!editOption)} value=\"Cancel\" className=\"mt-3 mx-1 btn btn-dark\" />\r\n                                        </>\r\n                                    }\r\n                                </form>\r\n                            </Collapse>\r\n                        </div>\r\n                        <div className='pt-4'>\r\n                            <Collapse className='' in={deleteOption}>\r\n                                <div>\r\n                                    <p>Are You Sure?</p>\r\n                                    { loadingDelete\r\n                                        ? <div className=\"spinner-border\"></div>\r\n                                        : <>\r\n                                            <input type=\"button\" className=\"mx-1 btn btn-dark\" onClick={onDelete} value=\"Confirm\" />\r\n                                            <input type=\"button\" className=\"mx-1 btn btn-dark\" onClick={(e) => setDeleteOption(!deleteOption)} value=\"Cancel\" />\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport OwnerBlob from './OwnerBlob'\r\n\r\nexport default function IndexBlob ({ setUpdateUploads, user, uploads, setUploads, setMsgAlerts }) {\r\n    const [index, setIndex] = useState(null)\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"pt-3 col-12 col-md-4 text-center\">\r\n                <h3>Your Uploads</h3>\r\n\r\n                { uploads && uploads.length !== 0\r\n                    ? uploads.map((upload, i) =>\r\n                        <h6 key={i} className='pe-pointer my-3 text-start' onClick={() => setIndex(i)}>\r\n                            {upload.title}  <span className=\"text-secondary\"> by {upload.artist} </span>\r\n                        </h6>)\r\n                    : <h5>No Uploads Found.</h5>}\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-8 bg-light mt-3\">\r\n                <OwnerBlob setUpdateUploads={setUpdateUploads} user={user} index={index} setIndex ={setIndex} setMsgAlerts={setMsgAlerts} uploads={uploads} setUploads={setUploads}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/front.e3ec0cba.svg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport logo from '../../img/front.svg'\r\nexport default function Home () {\r\n    return (\r\n        <div className='position-relative'>\r\n            <div className=\"row animated animatedFadeInUp fadeInUp\">\r\n                <div className=\"d-flex col-12 col-sm-6 text-center align-items-center\">\r\n                    <div className='d-block p-3 mx-auto'>\r\n                        <h1 className='display-4'>Try out ARCHI.VIN</h1>\r\n                        <h5 className='d-block'>for all of your music storing needs</h5>\r\n                        <NavLink to='/sign-up' className='btn btn-dark m-2'>Sign Up</NavLink>\r\n                        <NavLink to='/sign-in' className='btn btn-dark m-2'>Sign In</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6 py-4 mx-auto\">\r\n                    <img src={logo} className='w-100 bob-down img-fluid'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { showBlob } from '../../api/blob'\r\n\r\nfunction ShowBlob ({ setMsgAlerts, user, match, history }) {\r\n    const [upload, setUpload] = useState({})\r\n\r\n    useEffect(() => {\r\n        showBlob(match.params.id)\r\n            .then(res => setUpload(res.data.blob))\r\n            .catch(() =>\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'Failed getting file.',\r\n                    message: 'File does not exist',\r\n                    variant: 'danger'\r\n                }])\r\n            )\r\n    }, [])\r\n\r\n    const uploadJSX = () => {\r\n        if (Object.keys(upload).length === 0) {\r\n            return <h1>404: File Does Not Exist.</h1>\r\n        } else {\r\n            return (\r\n                <div className='border shadow p-3'>\r\n                    <div className='p-2'>\r\n                        <h3 className=''>{upload.title}</h3>\r\n                        <h5>By {upload.artist}</h5>\r\n                    </div>\r\n                    <audio controls>\r\n                        <source src={upload.url} />\r\n                        Your Browser does not support the audio element.\r\n                    </audio>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className='text-center w-100 my-5 d-flex align-items-center justify-content-center'>\r\n            { uploadJSX() }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ShowBlob)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/Auth/SignUp'\r\nimport SignIn from './components/Auth/SignIn'\r\nimport SignOut from './components/Auth/SignOut'\r\nimport ChangePassword from './components/Auth/ChangePassword'\r\nimport CreateBlob from './components/Blob/CreateBlob'\r\nimport IndexBlob from './components/Blob/IndexBlob'\r\nimport { indexBlob } from './api/blob'\r\nimport Home from './components/Home/Home'\r\nimport ShowBlob from './components/Blob/ShowBlob'\r\n\r\nexport default function App (props) {\r\n    const [user, setUser] = useState(null)\r\n    const [updateUploads, setUpdateUploads] = useState(false)\r\n    const [msgAlerts, setMsgAlerts] = useState([])\r\n    const [uploads, setUploads] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (!user && !updateUploads) return\r\n        indexBlob(user)\r\n            .then(res => { setUploads(res.data.blobs) })\r\n            .then(() => setUpdateUploads(false))\r\n            .catch(() =>\r\n                setMsgAlerts(prev => [...prev, {\r\n                    heading: 'Failed getting files.',\r\n                    message: 'Severs could be down',\r\n                    variant: 'danger'\r\n                }])\r\n            )\r\n    }, [user, updateUploads])\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    const deleteAlert = (id) => {\r\n        setMsgAlerts((prevValue) => {\r\n            return prevValue.filter((msg) => msg.id !== id)\r\n        })\r\n    }\r\n\r\n    const homeJSX = () => {\r\n        if (user === null) {\r\n            return <Home msgAlert={msgAlerts} setUploads={setUploads} user={user} setMsgAlerts={setMsgAlerts} />\r\n        } else {\r\n            return (\r\n                <>\r\n                    <CreateBlob msgAlert={msgAlerts} setUploads={setUploads} user={user} setMsgAlerts={setMsgAlerts} />\r\n                    <IndexBlob setUpdateUploads={setUpdateUploads} msgAlert={msgAlerts} uploads={uploads} setUploads={setUploads} user={user} setMsgAlerts={setMsgAlerts} />\r\n                </>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header user={user} />\r\n            {msgAlerts.map((msgAlert, i) => (\r\n                <AutoDismissAlert\r\n                    key={i}\r\n                    heading={msgAlert.heading}\r\n                    variant={msgAlert.variant}\r\n                    message={msgAlert.message}\r\n                    id={msgAlert.id}\r\n                    deleteAlert={deleteAlert}\r\n                />\r\n            ))}\r\n            <main className='container'>\r\n                <Route\r\n                    path='/'\r\n                    exact\r\n                    render={() => {\r\n                        return homeJSX()\r\n                    }\r\n                    }\r\n                />\r\n                <Route\r\n                    path='/sign-up'\r\n                    render={() => (\r\n                        <SignUp msgAlert={msgAlerts} setMsgAlerts={setMsgAlerts} setUser={setUser} />\r\n                    )}\r\n                />\r\n                <Route\r\n                    path='/sign-in'\r\n                    render={() => (\r\n                        <SignIn msgAlert={msgAlerts} setMsgAlerts={setMsgAlerts} setUser={setUser} />\r\n                    )}\r\n                />\r\n                <Route\r\n                    path='/u/:id'\r\n                    exact\r\n                    render={() => (\r\n                        <ShowBlob msgAlert={msgAlerts} setMsgAlerts={setMsgAlerts} user={user} />\r\n                    )}\r\n                />\r\n                <AuthenticatedRoute\r\n                    user={user}\r\n                    path='/sign-out'\r\n                    render={() => (\r\n                        <SignOut\r\n                            msgAlert={msgAlerts}\r\n                            setMsgAlerts={setMsgAlerts}\r\n                            setUser={setUser}\r\n                            user={user}\r\n                        />\r\n                    )}\r\n                />\r\n                <AuthenticatedRoute\r\n                    user={user}\r\n                    path='/change-password'\r\n                    render={() => (\r\n                        <ChangePassword msgAlert={msgAlerts} setMsgAlerts={setMsgAlerts} user={user} />\r\n                    )}\r\n                />\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\n// class App extends Component {\r\n//     constructor (props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             user: null,\r\n//             msgAlerts: []\r\n//         }\r\n//     }\r\n\r\n//     setUser = (user) => this.setState({ user })\r\n\r\n//     clearUser = () => this.setState({ user: null })\r\n\r\n//     deleteAlert = (id) => {\r\n//         this.setState((state) => {\r\n//             return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n//         })\r\n//     }\r\n\r\n//     msgAlert = ({ heading, message, variant }) => {\r\n//         const id = uuid()\r\n//         this.setState((state) => {\r\n//             return {\r\n//                 msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     render () {\r\n//         const { msgAlerts, user } = this.state\r\n\r\n//         return (\r\n//             <>\r\n//                 <Header user={user} />\r\n//                 {msgAlerts.map((msgAlert) => (\r\n//                     <AutoDismissAlert\r\n//                         key={msgAlert.id}\r\n//                         heading={msgAlert.heading}\r\n//                         variant={msgAlert.variant}\r\n//                         message={msgAlert.message}\r\n//                         id={msgAlert.id}\r\n//                         deleteAlert={this.deleteAlert}\r\n//                     />\r\n//                 ))}\r\n//                 <main className='container'>\r\n//                     {user != null && <Route\r\n//                         path='/'\r\n//                         exact\r\n//                         render={() => (\r\n//                             <>\r\n//                                 <CreateBlob msgAlert={msgAlerts} user={user} />\r\n//                                 <IndexBlob msgAlert={msgAlerts} user={user} />\r\n//                             </>\r\n//                         )}\r\n//                     />}\r\n//                     <Route\r\n//                         path='/u/:id'\r\n//                         exact\r\n//                         render={() => (\r\n//                             <ShowBlob msgAlert={msgAlerts} user={user} />\r\n//                         )}\r\n//                     />\r\n//                     <Route\r\n//                         path='/sign-up'\r\n//                         render={() => (\r\n//                             <SignUp msgAlert={msgAlerts} setUser={setUser} />\r\n//                         )}\r\n//                     />\r\n//                     <Route\r\n//                         path='/sign-in'\r\n//                         render={() => (\r\n//                             <SignIn msgAlert={msgAlerts} setUser={setUser} />\r\n//                         )}\r\n//                     />\r\n//                     <AuthenticatedRoute\r\n//                         user={user}\r\n//                         path='/sign-out'\r\n//                         render={() => (\r\n//                             <SignOut\r\n//                                 msgAlert={msgAlerts}\r\n//                                 clearUser={this.clearUser}\r\n//                                 user={user}\r\n//                             />\r\n//                         )}\r\n//                     />\r\n//                     <AuthenticatedRoute\r\n//                         user={user}\r\n//                         path='/change-password'\r\n//                         render={() => (\r\n//                             <ChangePassword msgAlert={msgAlerts} user={user} />\r\n//                         )}\r\n//                     />\r\n//                 </main>\r\n//             </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst appJsx = (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(appJsx, document.getElementById('root'))\r\n"],"sourceRoot":""}